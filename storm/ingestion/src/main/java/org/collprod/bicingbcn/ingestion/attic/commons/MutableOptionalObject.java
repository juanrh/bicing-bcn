package org.collprod.bicingbcn.ingestion.attic.commons;

import com.google.common.base.Optional;

/**
 * Convenience class for MutableObjects that contain an Optional value
 * */
public class MutableOptionalObject<V> extends MutableObject<Optional<V>> {

	// Generated by Eclipse
	private static final long serialVersionUID = -3188469822473893679L;

	/**
	 * Create a mutable value containing an optional absent value
	 * */
	@SuppressWarnings("unchecked")
	public MutableOptionalObject() {
		this((Optional<V>)Optional.absent());
	}
	
	/**
	 * Create a mutable value containing an optional present value with 
	 * the value specified 
	 * */
	public MutableOptionalObject(V value) {
		super(Optional.of(value));
	}
	
	/**
	 * Create a mutable value containing the optional value specified
	 * */
	public MutableOptionalObject(Optional<V> value) {
		super(value);
	}
	
	/**
	 * Set the value to an optional present value with the value specified 
	 * Cannot override MutableObject.setValue as generics overlap
	 * 
	 * @param value to be set
	 * */
	public void setPresentValue(V value) {
		super.set(Optional.of(value));
	}
		
	/**
	 * Set the value to an optional absent value
	 * */
	@SuppressWarnings("unchecked")
	public void setAbsent() {
		super.set((Optional<V>)Optional.absent());
	}
	
	@Override
	public String toString() {
		// mimicking implementation synthesized for an 
		// AutoValue (https://github.com/google/auto/tree/master/value)
		return "MutableOptionalObject{"
				+ "value=" + this.get()
				+ "}";
	}
}
